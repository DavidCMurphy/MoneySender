5f5183b83e35e31eb2b282cb931210ab
"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.FailedSendEpic = exports.SendMoneyEpic = exports.errorMessage = exports.errorTitle = void 0;var _reduxObservable = require("redux-observable");
var _ActionTypes = require("../../ActionTypes");
var _rxjs = require("rxjs");
var _operators = require("rxjs/operators");
var errorTitle = "Error";exports.errorTitle = errorTitle;
var errorMessage = "Insufficient funds";exports.errorMessage = errorMessage;
var SendMoneyEpic = function SendMoneyEpic(action, store) {return action.pipe((0, _reduxObservable.ofType)(_ActionTypes.TypeKeys.SEND_MONEY), (0, _operators.mergeMap)(function (action$) {
    var state = store.value;
    var total = state.account.totalAvailable;
    var amount = +action$.transaction.amount;
    return total - amount >= 0 ?
    (0, _rxjs.of)({
      type: _ActionTypes.TypeKeys.SEND_MONEY_SUCCESS,
      transaction: action$.transaction }) :

    (0, _rxjs.concat)((0, _rxjs.of)({ type: _ActionTypes.TypeKeys.SEND_MONEY_FAIL }));
  }), (0, _operators.delay)(3000));};exports.SendMoneyEpic = SendMoneyEpic;
var FailedSendEpic = function FailedSendEpic(action) {return action.pipe((0, _reduxObservable.ofType)(_ActionTypes.TypeKeys.SEND_MONEY_FAIL), (0, _operators.mergeMap)(function () {return (0, _rxjs.of)({
      type: _ActionTypes.TypeKeys.SHOW_ERROR,
      title: "Error",
      message: "Insufficient funds" });}));};exports.FailedSendEpic = FailedSendEpic;