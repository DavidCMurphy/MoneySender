{"file":"/Users/davidmurphy/Desktop/MoneySender/src/Send/SendFormComponent.tsx","mappings":"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","names":[],"sources":["/Users/davidmurphy/Desktop/MoneySender/src/Send/SendFormComponent.tsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { View, ActivityIndicator, Keyboard } from 'react-native'\nimport FormInputComponent, { FormInput } from './FormInputComponent'\nimport styled from 'styled-components/native'\nimport { colors } from '../Themes/colors'\nimport { SectionTitle, Container, InnerContainer } from '../Themes/SharedStyles'\nimport { connect } from 'react-redux'\nimport { State } from '../App'\nimport { TypeKeys } from '../ActionTypes'\nimport { Transaction, SendMoneyAction } from './Reducers'\nimport { nameForm, emailForm, amountForm } from './Forms'\n\nconst SendButton = styled.TouchableOpacity`\n    background-color: ${ colors.blue };\n    height: 48px;\n    border-radius: 24px;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 10px;\n`\nconst SendButtonTitle = styled.Text`\n    color: white;\n    font-size: 15px;\n    font-family: System;\n`\n\ninterface SendFormState {\n    name: FormInput\n    emailAddress: FormInput\n    amount: FormInput\n}\n\ninterface SendFormProps {\n  isLoading: boolean\n}\n\ninterface SendDispatchProps {\n  send: (transation: Transaction) => SendMoneyAction\n}\n\nclass SendFormComponent extends Component<SendFormProps & SendDispatchProps, SendFormState> {\n\n  state: SendFormState = {\n    name: nameForm(),\n    emailAddress: emailForm(),\n    amount: amountForm()\n  }\n\n  sendForm = () => {\n\n    Keyboard.dismiss()\n\n    let { name, emailAddress, amount } = this.state\n    if ( name.value && name.isValid &&\n        emailAddress.value && emailAddress.isValid &&\n        amount.value && amount.isValid ) {\n      this.props.send( { name: name.value, email: emailAddress.value, amount: amount.value } )\n    } else {\n      this.setState({ name: { ...name, isValid: name.validation( name.value ) },\n        emailAddress: { ...emailAddress, isValid: emailAddress.validation( emailAddress.value ) },\n        amount: { ...amount, isValid: amount.validation( amount.value ) } })\n    }\n  }\n\n  render() {\n    const { name, emailAddress, amount } = this.state\n    return <Container>\n      <InnerContainer>\n      <SectionTitle>Send money</ SectionTitle>\n      <FormInputComponent\n        form={ name }\n        onChange={ (name) => this.setState({ name }) } />\n      <FormInputComponent\n        form={ emailAddress }\n        onChange={ (emailAddress) => this.setState({ emailAddress }) } />\n      <FormInputComponent\n        form={ amount }\n        onChange={ (amount) => this.setState({ amount }) } />\n      <View style={{ flex: 1 }} />\n      <SendButton\n        disabled={ this.props.isLoading }\n        onPress={ this.sendForm }>\n          { (this.props.isLoading)\n          ? <ActivityIndicator animating={true} color={'white'} />\n          : (<SendButtonTitle>\n            Send\n          </ SendButtonTitle>) }\n        </ SendButton>\n      </ InnerContainer>\n    </ Container>\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  send: (transaction: Transaction) => dispatch({ type: TypeKeys.SEND_MONEY, transaction })\n})\n\nconst mapStateToProps = (state: State): SendFormProps => ({\n  isLoading: state.send.loading\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SendFormComponent)"],"version":3}