{"version":3,"sources":["TouchableWithoutFeedback.js"],"names":["DeprecatedEdgeInsetsPropType","require","React","PropTypes","Touchable","View","createReactClass","ensurePositiveDelayProps","DeprecatedAccessibilityComponentTypes","DeprecatedAccessibilityRoles","DeprecatedAccessibilityStates","DeprecatedAccessibilityTraits","PRESS_RETENTION_OFFSET","top","left","right","bottom","TouchableWithoutFeedback","displayName","mixins","Mixin","propTypes","accessible","bool","accessibilityLabel","node","accessibilityHint","string","accessibilityComponentType","oneOf","accessibilityRole","accessibilityStates","arrayOf","accessibilityTraits","oneOfType","onFocus","func","onBlur","disabled","onPress","onPressIn","onPressOut","onLayout","onLongPress","nativeID","testID","delayPressIn","number","delayPressOut","delayLongPress","pressRetentionOffset","hitSlop","getInitialState","touchableGetInitialState","componentDidMount","props","UNSAFE_componentWillReceiveProps","nextProps","touchableHandlePress","e","touchableHandleActivePressIn","touchableHandleActivePressOut","touchableHandleLongPress","touchableGetPressRectOffset","touchableGetHitSlop","touchableGetHighlightDelayMS","touchableGetLongPressDelayMS","touchableGetPressOutDelayMS","render","child","Children","only","children","TOUCH_TARGET_DEBUG","type","toArray","push","renderDebugView","color","cloneElement","onStartShouldSetResponder","touchableHandleStartShouldSetResponder","onResponderTerminationRequest","touchableHandleResponderTerminationRequest","onResponderGrant","touchableHandleResponderGrant","onResponderMove","touchableHandleResponderMove","onResponderRelease","touchableHandleResponderRelease","onResponderTerminate","touchableHandleResponderTerminate","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst DeprecatedEdgeInsetsPropType = require('DeprecatedEdgeInsetsPropType');\nconst React = require('React');\nconst PropTypes = require('prop-types');\nconst Touchable = require('Touchable');\nconst View = require('View');\n\nconst createReactClass = require('create-react-class');\nconst ensurePositiveDelayProps = require('ensurePositiveDelayProps');\n\nconst {\n  DeprecatedAccessibilityComponentTypes,\n  DeprecatedAccessibilityRoles,\n  DeprecatedAccessibilityStates,\n  DeprecatedAccessibilityTraits,\n} = require('DeprecatedViewAccessibility');\n\nimport type {PressEvent} from 'CoreEventTypes';\nimport type {EdgeInsetsProp} from 'EdgeInsetsPropType';\nimport type {\n  AccessibilityComponentType,\n  AccessibilityRole,\n  AccessibilityStates,\n  AccessibilityTraits,\n} from 'ViewAccessibility';\n\nconst PRESS_RETENTION_OFFSET = {top: 20, left: 20, right: 20, bottom: 30};\n\nexport type Props = $ReadOnly<{|\n  accessible?: ?boolean,\n  accessibilityComponentType?: ?AccessibilityComponentType,\n  accessibilityLabel?:\n    | null\n    | React$PropType$Primitive<any>\n    | string\n    | Array<any>\n    | any,\n  accessibilityHint?: ?Stringish,\n  accessibilityIgnoresInvertColors?: ?boolean,\n  accessibilityRole?: ?AccessibilityRole,\n  accessibilityStates?: ?AccessibilityStates,\n  accessibilityTraits?: ?AccessibilityTraits,\n  children?: ?React.Node,\n  delayLongPress?: ?number,\n  delayPressIn?: ?number,\n  delayPressOut?: ?number,\n  disabled?: ?boolean,\n  hitSlop?: ?EdgeInsetsProp,\n  nativeID?: ?string,\n  onBlur?: ?Function,\n  onFocus?: ?Function,\n  onLayout?: ?Function,\n  onLongPress?: ?Function,\n  onPress?: ?Function,\n  onPressIn?: ?Function,\n  onPressOut?: ?Function,\n  pressRetentionOffset?: ?EdgeInsetsProp,\n  rejectResponderTermination?: ?boolean,\n  testID?: ?string,\n|}>;\n\n/**\n * Do not use unless you have a very good reason. All elements that\n * respond to press should have a visual feedback when touched.\n *\n * TouchableWithoutFeedback supports only one child.\n * If you wish to have several child components, wrap them in a View.\n */\nconst TouchableWithoutFeedback = ((createReactClass({\n  displayName: 'TouchableWithoutFeedback',\n  mixins: [Touchable.Mixin],\n\n  propTypes: {\n    accessible: PropTypes.bool,\n    accessibilityLabel: PropTypes.node,\n    accessibilityHint: PropTypes.string,\n    accessibilityComponentType: PropTypes.oneOf(\n      DeprecatedAccessibilityComponentTypes,\n    ),\n    accessibilityRole: PropTypes.oneOf(DeprecatedAccessibilityRoles),\n    accessibilityStates: PropTypes.arrayOf(\n      PropTypes.oneOf(DeprecatedAccessibilityStates),\n    ),\n    accessibilityTraits: PropTypes.oneOfType([\n      PropTypes.oneOf(DeprecatedAccessibilityTraits),\n      PropTypes.arrayOf(PropTypes.oneOf(DeprecatedAccessibilityTraits)),\n    ]),\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"focus\" occurs. Some platforms may not have\n     * the concept of focus.\n     */\n    onFocus: PropTypes.func,\n    /**\n     * When `accessible` is true (which is the default) this may be called when\n     * the OS-specific concept of \"blur\" occurs, meaning the element lost focus.\n     * Some platforms may not have the concept of blur.\n     */\n    onBlur: PropTypes.func,\n    /**\n     * If true, disable all interactions for this component.\n     */\n    disabled: PropTypes.bool,\n    /**\n     * Called when the touch is released, but not if cancelled (e.g. by a scroll\n     * that steals the responder lock).\n     */\n    onPress: PropTypes.func,\n    /**\n     * Called as soon as the touchable element is pressed and invoked even before onPress.\n     * This can be useful when making network requests.\n     */\n    onPressIn: PropTypes.func,\n    /**\n     * Called as soon as the touch is released even before onPress.\n     */\n    onPressOut: PropTypes.func,\n    /**\n     * Invoked on mount and layout changes with\n     *\n     *   `{nativeEvent: {layout: {x, y, width, height}}}`\n     */\n    onLayout: PropTypes.func,\n\n    onLongPress: PropTypes.func,\n\n    nativeID: PropTypes.string,\n    testID: PropTypes.string,\n\n    /**\n     * Delay in ms, from the start of the touch, before onPressIn is called.\n     */\n    delayPressIn: PropTypes.number,\n    /**\n     * Delay in ms, from the release of the touch, before onPressOut is called.\n     */\n    delayPressOut: PropTypes.number,\n    /**\n     * Delay in ms, from onPressIn, before onLongPress is called.\n     */\n    delayLongPress: PropTypes.number,\n    /**\n     * When the scroll view is disabled, this defines how far your touch may\n     * move off of the button, before deactivating the button. Once deactivated,\n     * try moving it back and you'll see that the button is once again\n     * reactivated! Move it back and forth several times while the scroll view\n     * is disabled. Ensure you pass in a constant to reduce memory allocations.\n     */\n    pressRetentionOffset: DeprecatedEdgeInsetsPropType,\n    /**\n     * This defines how far your touch can start away from the button. This is\n     * added to `pressRetentionOffset` when moving off of the button.\n     * ** NOTE **\n     * The touch area never extends past the parent view bounds and the Z-index\n     * of sibling views always takes precedence if a touch hits two overlapping\n     * views.\n     */\n    hitSlop: DeprecatedEdgeInsetsPropType,\n  },\n\n  getInitialState: function() {\n    return this.touchableGetInitialState();\n  },\n\n  componentDidMount: function() {\n    ensurePositiveDelayProps(this.props);\n  },\n\n  UNSAFE_componentWillReceiveProps: function(nextProps: Object) {\n    ensurePositiveDelayProps(nextProps);\n  },\n\n  /**\n   * `Touchable.Mixin` self callbacks. The mixin will invoke these if they are\n   * defined on your component.\n   */\n  touchableHandlePress: function(e: PressEvent) {\n    this.props.onPress && this.props.onPress(e);\n  },\n\n  touchableHandleActivePressIn: function(e: PressEvent) {\n    this.props.onPressIn && this.props.onPressIn(e);\n  },\n\n  touchableHandleActivePressOut: function(e: PressEvent) {\n    this.props.onPressOut && this.props.onPressOut(e);\n  },\n\n  touchableHandleLongPress: function(e: PressEvent) {\n    this.props.onLongPress && this.props.onLongPress(e);\n  },\n\n  touchableGetPressRectOffset: function(): typeof PRESS_RETENTION_OFFSET {\n    // $FlowFixMe Invalid prop usage\n    return this.props.pressRetentionOffset || PRESS_RETENTION_OFFSET;\n  },\n\n  touchableGetHitSlop: function(): ?Object {\n    return this.props.hitSlop;\n  },\n\n  touchableGetHighlightDelayMS: function(): number {\n    return this.props.delayPressIn || 0;\n  },\n\n  touchableGetLongPressDelayMS: function(): number {\n    return this.props.delayLongPress === 0\n      ? 0\n      : this.props.delayLongPress || 500;\n  },\n\n  touchableGetPressOutDelayMS: function(): number {\n    return this.props.delayPressOut || 0;\n  },\n\n  render: function(): React.Element<any> {\n    // Note(avik): remove dynamic typecast once Flow has been upgraded\n    // $FlowFixMe(>=0.41.0)\n    const child = React.Children.only(this.props.children);\n    let children = child.props.children;\n    if (Touchable.TOUCH_TARGET_DEBUG && child.type === View) {\n      children = React.Children.toArray(children);\n      children.push(\n        Touchable.renderDebugView({color: 'red', hitSlop: this.props.hitSlop}),\n      );\n    }\n    return (React: any).cloneElement(child, {\n      accessible: this.props.accessible !== false,\n      accessibilityLabel: this.props.accessibilityLabel,\n      accessibilityHint: this.props.accessibilityHint,\n      accessibilityComponentType: this.props.accessibilityComponentType,\n      accessibilityRole: this.props.accessibilityRole,\n      accessibilityStates: this.props.accessibilityStates,\n      accessibilityTraits: this.props.accessibilityTraits,\n      nativeID: this.props.nativeID,\n      testID: this.props.testID,\n      onLayout: this.props.onLayout,\n      hitSlop: this.props.hitSlop,\n      onStartShouldSetResponder: this.touchableHandleStartShouldSetResponder,\n      onResponderTerminationRequest: this\n        .touchableHandleResponderTerminationRequest,\n      onResponderGrant: this.touchableHandleResponderGrant,\n      onResponderMove: this.touchableHandleResponderMove,\n      onResponderRelease: this.touchableHandleResponderRelease,\n      onResponderTerminate: this.touchableHandleResponderTerminate,\n      children,\n    });\n  },\n}): any): React.ComponentType<Props>);\n\nmodule.exports = TouchableWithoutFeedback;\n"]}