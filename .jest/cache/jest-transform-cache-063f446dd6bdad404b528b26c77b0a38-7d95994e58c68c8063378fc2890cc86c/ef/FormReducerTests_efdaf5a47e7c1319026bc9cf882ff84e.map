{"file":"/Users/davidmurphy/Desktop/MoneySender/src/__tests__/FormReducerTests.tsx","mappings":";;;;;;;;;AAAA,wBAAsB;AACtB,gEAA0E;AAC1E,6DAAiE;AACjE,gDAA0C;AAE1C,MAAM,WAAW,GAAG;IAClB,IAAI,EAAE,OAAO;IACb,KAAK,EAAE,yBAAyB;IAChC,MAAM,EAAE,KAAK;CACd,CAAC;AAEF,QAAQ,CAAC,2CAA2C,EAAE,GAAG,EAAE;IACzD,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,OAAO,GAAG,kBAAc,CAAC,8BAAmB,EAAE,EAAE;YACpD,IAAI,EAAE,sBAAQ,CAAC,kBAAkB;YACjC,WAAW;SACZ,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,KAAK,GAAG,8BAAmB,EAAE,CAAC;QACpC,MAAM,OAAO,GAAG,kBAAc,CAAC,KAAK,EAAE;YACpC,IAAI,EAAE,sBAAQ,CAAC,kBAAkB;YACjC,WAAW;SACZ,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3E,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE,GAAG,EAAE;QAC9C,MAAM,KAAK,GAAG,8BAAmB,EAAE,CAAC;QACpC,MAAM,OAAO,GAAG,kBAAc,CAAC,KAAK,EAAE;YACpC,IAAI,EAAE,sBAAQ,CAAC,kBAAkB;YACjC,WAAW;SACZ,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,OAAO,CACpC,KAAK,CAAC,cAAc,GAAG,CAAC,WAAW,CAAC,MAAM,CAC3C,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,yCAAyC,EAAE,GAAG,EAAE;IACvD,EAAE,CAAC,gCAAgC,EAAE,GAAG,EAAE;QACxC,MAAM,IAAI,GAAG,kBAAW,CAAC,2BAAgB,EAAE,EAAE;YAC3C,IAAI,EAAE,sBAAQ,CAAC,kBAAkB;YACjC,WAAW;SACZ,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,8BAA8B,EAAE,GAAG,EAAE;QACtC,MAAM,IAAI,GAAG,kBAAW,CAAC,2BAAgB,EAAE,EAAE;YAC3C,IAAI,EAAE,sBAAQ,CAAC,UAAU;YACzB,WAAW;SACZ,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACrC,MAAM,IAAI,GAAG,kBAAW,CAAC,2BAAgB,EAAE,EAAE;YAC3C,IAAI,EAAE,sBAAQ,CAAC,eAAe;SAC/B,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/davidmurphy/Desktop/MoneySender/src/__tests__/FormReducerTests.tsx"],"sourcesContent":["import \"react-native\";\nimport AccountReducer, { defaultAccountState } from \"../Account/Reducers\";\nimport SendReducer, { defaultSendState } from \"../Send/Reducers\";\nimport { TypeKeys } from \"../ActionTypes\";\n\nconst transaction = {\n  name: \"David\",\n  email: \"David.conor.m@gmail.com\",\n  amount: \"100\"\n};\n\ndescribe(\"Account reducer should function correctly\", () => {\n  it(\"should add a transaction to our list\", () => {\n    const account = AccountReducer(defaultAccountState(), {\n      type: TypeKeys.SEND_MONEY_SUCCESS,\n      transaction\n    });\n    expect(account.transations).toEqual([transaction]);\n  });\n\n  it(\"should add ammount to our send total\", () => {\n    const state = defaultAccountState();\n    const account = AccountReducer(state, {\n      type: TypeKeys.SEND_MONEY_SUCCESS,\n      transaction\n    });\n    expect(account.totalSent).toEqual(state.totalSent + +transaction.amount);\n  });\n\n  it(\"should remove ammount from out total\", () => {\n    const state = defaultAccountState();\n    const account = AccountReducer(state, {\n      type: TypeKeys.SEND_MONEY_SUCCESS,\n      transaction\n    });\n    expect(account.totalAvailable).toEqual(\n      state.totalAvailable - +transaction.amount\n    );\n  });\n});\n\ndescribe(\"ASend reducer should function correctly\", () => {\n  it(\"should stop loading on success\", () => {\n    const send = SendReducer(defaultSendState(), {\n      type: TypeKeys.SEND_MONEY_SUCCESS,\n      transaction\n    });\n    expect(send.loading).toEqual(false);\n  });\n\n  it(\"should start loading on send\", () => {\n    const send = SendReducer(defaultSendState(), {\n      type: TypeKeys.SEND_MONEY,\n      transaction\n    });\n    expect(send.loading).toEqual(true);\n  });\n\n  it(\"should stop loading on fail\", () => {\n    const send = SendReducer(defaultSendState(), {\n      type: TypeKeys.SEND_MONEY_FAIL\n    });\n    expect(send.loading).toEqual(false);\n  });\n});\n"],"version":3}