{"file":"/Users/davidmurphy/Desktop/MoneySender/src/Send/SendFormComponent.tsx","mappings":"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","names":[],"sources":["/Users/davidmurphy/Desktop/MoneySender/src/Send/SendFormComponent.tsx"],"sourcesContent":["import React, { Component } from \"react\";\nimport { View, ActivityIndicator, Keyboard } from \"react-native\";\nimport FormInputComponent, { FormInput } from \"./FormInputComponent\";\nimport styled from \"styled-components/native\";\nimport { colors } from \"../Themes/colors\";\nimport {\n  SectionTitle,\n  Container,\n  InnerContainer\n} from \"../Themes/SharedStyles\";\nimport { connect } from \"react-redux\";\nimport { State } from \"../App\";\nimport { TypeKeys } from \"../ActionTypes\";\nimport { Transaction, SendMoneyAction } from \"./Reducers\";\nimport { nameForm, emailForm, amountForm } from \"./Forms\";\n\nconst SendButton = styled.TouchableOpacity`\n  background-color: ${colors.blue};\n  height: 48px;\n  border-radius: 24px;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 10px;\n`;\nconst SendButtonTitle = styled.Text`\n  color: white;\n  font-size: 15px;\n  font-family: System;\n`;\n\ninterface SendFormState {\n  name: FormInput;\n  emailAddress: FormInput;\n  amount: FormInput;\n}\n\ninterface SendFormProps {\n  isLoading: boolean;\n}\n\ninterface SendDispatchProps {\n  send: (transation: Transaction) => SendMoneyAction;\n}\n\nclass SendFormComponent extends Component<\n  SendFormProps & SendDispatchProps,\n  SendFormState\n> {\n  state: SendFormState = {\n    name: nameForm(),\n    emailAddress: emailForm(),\n    amount: amountForm()\n  };\n\n  sendForm = () => {\n    Keyboard.dismiss();\n\n    const { name, emailAddress, amount } = this.state;\n    if (\n      name.value &&\n      name.isValid &&\n      emailAddress.value &&\n      emailAddress.isValid &&\n      amount.value &&\n      amount.isValid\n    ) {\n      this.props.send({\n        name: name.value,\n        email: emailAddress.value,\n        amount: amount.value\n      });\n    } else {\n      this.setState({\n        name: { ...name, isValid: name.validation(name.value) },\n        emailAddress: {\n          ...emailAddress,\n          isValid: emailAddress.validation(emailAddress.value)\n        },\n        amount: { ...amount, isValid: amount.validation(amount.value) }\n      });\n    }\n  };\n\n  render() {\n    const { name, emailAddress, amount } = this.state;\n    return (\n      <Container>\n        <InnerContainer>\n          <SectionTitle>Send money</SectionTitle>\n          <FormInputComponent\n            form={name}\n            onChange={name => this.setState({ name })}\n          />\n          <FormInputComponent\n            form={emailAddress}\n            onChange={emailAddress => this.setState({ emailAddress })}\n          />\n          <FormInputComponent\n            form={amount}\n            onChange={amount => this.setState({ amount })}\n          />\n          <View style={{ flex: 1 }} />\n          <SendButton disabled={this.props.isLoading} onPress={this.sendForm}>\n            {this.props.isLoading ? (\n              <ActivityIndicator animating={true} color={\"white\"} />\n            ) : (\n              <SendButtonTitle>Send</SendButtonTitle>\n            )}\n          </SendButton>\n        </InnerContainer>\n      </Container>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  send: (transaction: Transaction): SendMoneyAction =>\n    dispatch({ type: TypeKeys.SEND_MONEY, transaction })\n});\n\nconst mapStateToProps = (state: State): SendFormProps => ({\n  isLoading: state.send.loading\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SendFormComponent);\n"],"version":3}