{"version":3,"sources":["createEpicMiddleware.js"],"names":["Object","defineProperty","exports","value","createEpicMiddleware","_rxjs","require","_operators","_ActionsObservable","_StateObservable","options","arguments","length","undefined","process","env","NODE_ENV","TypeError","epic$","Subject","store","epicMiddleware","_store","warn","actionSubject$","pipe","observeOn","queueScheduler","stateSubject$","action$","ActionsObservable","state$","StateObservable","getState","result$","map","epic","output$","dependencies","name","mergeMap","from","subscribeOn","subscribe","dispatch","next","action","result","run","rootEpic"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEpicMiddleware = createEpicMiddleware;\n\nvar _rxjs = require('rxjs');\n\nvar _operators = require('rxjs/operators');\n\nvar _ActionsObservable = require('./ActionsObservable');\n\nvar _StateObservable = require('./StateObservable');\n\nfunction createEpicMiddleware() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (process.env.NODE_ENV !== 'production' && typeof options === 'function') {\n    throw new TypeError('Providing your root Epic to `createEpicMiddleware(rootEpic)` is no longer supported, instead use `epicMiddleware.run(rootEpic)`\\n\\nLearn more: https://redux-observable.js.org/MIGRATION.html#setting-up-the-middleware');\n  }\n\n  var epic$ = new _rxjs.Subject();\n  var store = void 0;\n\n  var epicMiddleware = function epicMiddleware(_store) {\n    if (process.env.NODE_ENV !== 'production' && store) {\n      // https://github.com/redux-observable/redux-observable/issues/389\n      require('./utils/console').warn('this middleware is already associated with a store. createEpicMiddleware should be called for every store.\\n\\nLearn more: https://goo.gl/2GQ7Da');\n    }\n    store = _store;\n    var actionSubject$ = new _rxjs.Subject().pipe((0, _operators.observeOn)(_rxjs.queueScheduler));\n    var stateSubject$ = new _rxjs.Subject().pipe((0, _operators.observeOn)(_rxjs.queueScheduler));\n    var action$ = new _ActionsObservable.ActionsObservable(actionSubject$);\n    var state$ = new _StateObservable.StateObservable(stateSubject$, store.getState());\n\n    var result$ = epic$.pipe((0, _operators.map)(function (epic) {\n      var output$ = 'dependencies' in options ? epic(action$, state$, options.dependencies) : epic(action$, state$);\n\n      if (!output$) {\n        throw new TypeError('Your root Epic \"' + (epic.name || '<anonymous>') + '\" does not return a stream. Double check you\\'re not missing a return statement!');\n      }\n\n      return output$;\n    }), (0, _operators.mergeMap)(function (output$) {\n      return (0, _rxjs.from)(output$).pipe((0, _operators.subscribeOn)(_rxjs.queueScheduler), (0, _operators.observeOn)(_rxjs.queueScheduler));\n    }));\n\n    result$.subscribe(store.dispatch);\n\n    return function (next) {\n      return function (action) {\n        // Downstream middleware gets the action first,\n        // which includes their reducers, so state is\n        // updated before epics receive the action\n        var result = next(action);\n\n        // It's important to update the state$ before we emit\n        // the action because otherwise it would be stale\n        stateSubject$.next(store.getState());\n        actionSubject$.next(action);\n\n        return result;\n      };\n    };\n  };\n\n  epicMiddleware.run = function (rootEpic) {\n    if (process.env.NODE_ENV !== 'production' && !store) {\n      require('./utils/console').warn('epicMiddleware.run(rootEpic) called before the middleware has been setup by redux. Provide the epicMiddleware instance to createStore() first.');\n    }\n    epic$.next(rootEpic);\n  };\n\n  return epicMiddleware;\n}"]}