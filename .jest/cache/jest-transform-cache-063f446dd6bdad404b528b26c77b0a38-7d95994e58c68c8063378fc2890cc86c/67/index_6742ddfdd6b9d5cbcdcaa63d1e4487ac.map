{"file":"/Users/davidmurphy/Desktop/MoneySender/src/Send/Epics/index.tsx","mappings":";;AACA,uDAA6E;AAC7E,mDAA4C;AAE5C,+BAA6C;AAC7C,8CAAgD;AAInC,QAAA,UAAU,GAAG,OAAO,CAAA;AACpB,QAAA,YAAY,GAAG,oBAAoB,CAAA;AAEhD,kBAAe,CAAC,MAAiC,EAAE,KAA6B,EAAG,EAAE,CACnF,MAAM,CAAC,IAAI,CACT,yBAAM,CAAC,sBAAQ,CAAC,UAAU,CAAC,EAC3B,oBAAQ,CAAC,CAAC,OAAwB,EAA0E,EAAE;IAC1G,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAA;IACvB,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,cAAc,CAAA;IACxC,IAAI,MAAM,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAA;IACxC,OAAO,CAAE,CAAC,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAC/B,CAAC,CAAC,SAAE,CAAyB,EAAE,IAAI,EAAE,sBAAQ,CAAC,kBAAkB,EAAE,WAAW,EAAE,OAAO,CAAC,WAAW,EAAE,CAAC;QACrG,CAAC,CAAC,aAAM,CAAE,SAAE,CAAsB,EAAE,IAAI,EAAE,sBAAQ,CAAC,eAAe,EAAE,CAAC,EACnE,SAAE,CAAc,EAAE,IAAI,EAAE,sBAAQ,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAE,CAAA;AACnG,CAAC,CACF,EACD,iBAAK,CAAC,IAAI,CAAC,CACZ,CAAC","names":[],"sources":["/Users/davidmurphy/Desktop/MoneySender/src/Send/Epics/index.tsx"],"sourcesContent":["import { Action } from 'redux'\nimport { ofType, ActionsObservable, StateObservable } from 'redux-observable'\nimport { TypeKeys } from '../../ActionTypes'\nimport { SendMoneyAction, SendMoneyActionSuccess, SendMoneyActionFail } from '../Reducers'\nimport { of, concat, Observable } from 'rxjs'\nimport { mergeMap, delay } from 'rxjs/operators'\nimport { ErrorAction } from '../../Error'\nimport { State } from '../../App'\n\nexport const errorTitle = 'Error'\nexport const errorMessage = 'Insufficient funds'\n\nexport default (action: ActionsObservable<Action>, store: StateObservable<State> ) =>\n  action.pipe(\n    ofType(TypeKeys.SEND_MONEY),\n    mergeMap((action$: SendMoneyAction): Observable<SendMoneyActionSuccess | ErrorAction | SendMoneyActionFail> => {\n        let state = store.value\n        let total = state.account.totalAvailable\n        let amount = +action$.transaction.amount\n        return ( (total - amount) >= 0)\n        ? of<SendMoneyActionSuccess>({ type: TypeKeys.SEND_MONEY_SUCCESS, transaction: action$.transaction })\n        : concat( of<SendMoneyActionFail>({ type: TypeKeys.SEND_MONEY_FAIL }),\n          of<ErrorAction>({ type: TypeKeys.SHOW_ERROR, title: 'Error', message: 'Insufficient funds' }) )\n      }\n    ),\n    delay(3000)\n  );"],"version":3}