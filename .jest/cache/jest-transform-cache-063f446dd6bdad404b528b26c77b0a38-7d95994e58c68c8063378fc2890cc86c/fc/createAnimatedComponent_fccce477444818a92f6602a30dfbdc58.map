{"version":3,"sources":["createAnimatedComponent.js"],"names":["require","AnimatedEvent","AnimatedProps","React","DeprecatedViewStylePropTypes","invariant","createAnimatedComponent","Component","prototype","isReactComponent","AnimatedComponent","props","_invokeAnimatedPropsCallbackOnMount","_eventDetachers","_animatedPropsCallback","_component","__skipSetNativeProps_FOR_TESTS_ONLY","setNativeProps","forceUpdate","_propsAnimated","__isNative","__getAnimatedValue","Error","_setComponentRef","bind","__detach","_detachNativeEvents","_attachProps","setNativeView","_attachNativeEvents","scrollableNode","getScrollableNode","key","prop","__attach","push","forEach","remove","nextProps","oldPropsAnimated","newProps","prevProps","_prevComponent","__getValue","collapsable","c","propTypes","style","propName","componentName","undefined","console","warn","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst {AnimatedEvent} = require('./AnimatedEvent');\nconst AnimatedProps = require('./nodes/AnimatedProps');\nconst React = require('React');\nconst DeprecatedViewStylePropTypes = require('DeprecatedViewStylePropTypes');\n\nconst invariant = require('fbjs/lib/invariant');\n\nfunction createAnimatedComponent(Component: any): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    '`createAnimatedComponent` does not support stateless functional components; ' +\n      'use a class component instead.',\n  );\n\n  class AnimatedComponent extends React.Component<Object> {\n    _component: any;\n    _invokeAnimatedPropsCallbackOnMount: boolean = false;\n    _prevComponent: any;\n    _propsAnimated: AnimatedProps;\n    _eventDetachers: Array<Function> = [];\n    _setComponentRef: Function;\n\n    static __skipSetNativeProps_FOR_TESTS_ONLY = false;\n\n    constructor(props: Object) {\n      super(props);\n      this._setComponentRef = this._setComponentRef.bind(this);\n    }\n\n    componentWillUnmount() {\n      this._propsAnimated && this._propsAnimated.__detach();\n      this._detachNativeEvents();\n    }\n\n    setNativeProps(props) {\n      this._component.setNativeProps(props);\n    }\n\n    UNSAFE_componentWillMount() {\n      this._attachProps(this.props);\n    }\n\n    componentDidMount() {\n      if (this._invokeAnimatedPropsCallbackOnMount) {\n        this._invokeAnimatedPropsCallbackOnMount = false;\n        this._animatedPropsCallback();\n      }\n\n      this._propsAnimated.setNativeView(this._component);\n      this._attachNativeEvents();\n    }\n\n    _attachNativeEvents() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      const scrollableNode = this._component.getScrollableNode\n        ? this._component.getScrollableNode()\n        : this._component;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (prop instanceof AnimatedEvent && prop.__isNative) {\n          prop.__attach(scrollableNode, key);\n          this._eventDetachers.push(() => prop.__detach(scrollableNode, key));\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      this._eventDetachers.forEach(remove => remove());\n      this._eventDetachers = [];\n    }\n\n    // The system is best designed when setNativeProps is implemented. It is\n    // able to avoid re-rendering and directly set the attributes that changed.\n    // However, setNativeProps can only be implemented on leaf native\n    // components. If you want to animate a composite component, you need to\n    // re-render it. In this case, we have a fallback that uses forceUpdate.\n    _animatedPropsCallback = () => {\n      if (this._component == null) {\n        // AnimatedProps is created in will-mount because it's used in render.\n        // But this callback may be invoked before mount in async mode,\n        // In which case we should defer the setNativeProps() call.\n        // React may throw away uncommitted work in async mode,\n        // So a deferred call won't always be invoked.\n        this._invokeAnimatedPropsCallbackOnMount = true;\n      } else if (\n        AnimatedComponent.__skipSetNativeProps_FOR_TESTS_ONLY ||\n        typeof this._component.setNativeProps !== 'function'\n      ) {\n        this.forceUpdate();\n      } else if (!this._propsAnimated.__isNative) {\n        this._component.setNativeProps(\n          this._propsAnimated.__getAnimatedValue(),\n        );\n      } else {\n        throw new Error(\n          'Attempting to run JS driven animation on animated ' +\n            'node that has been moved to \"native\" earlier by starting an ' +\n            'animation with `useNativeDriver: true`',\n        );\n      }\n    };\n\n    _attachProps(nextProps) {\n      const oldPropsAnimated = this._propsAnimated;\n\n      this._propsAnimated = new AnimatedProps(\n        nextProps,\n        this._animatedPropsCallback,\n      );\n\n      // When you call detach, it removes the element from the parent list\n      // of children. If it goes to 0, then the parent also detaches itself\n      // and so on.\n      // An optimization is to attach the new elements and THEN detach the old\n      // ones instead of detaching and THEN attaching.\n      // This way the intermediate state isn't to go to 0 and trigger\n      // this expensive recursive detaching to then re-attach everything on\n      // the very next operation.\n      oldPropsAnimated && oldPropsAnimated.__detach();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps) {\n      this._attachProps(newProps);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (this._component !== this._prevComponent) {\n        this._propsAnimated.setNativeView(this._component);\n      }\n      if (this._component !== this._prevComponent || prevProps !== this.props) {\n        this._detachNativeEvents();\n        this._attachNativeEvents();\n      }\n    }\n\n    render() {\n      const props = this._propsAnimated.__getValue();\n      return (\n        <Component\n          {...props}\n          ref={this._setComponentRef}\n          // The native driver updates views directly through the UI thread so we\n          // have to make sure the view doesn't get optimized away because it cannot\n          // go through the NativeViewHierarchyManager since it operates on the shadow\n          // thread.\n          collapsable={\n            this._propsAnimated.__isNative ? false : props.collapsable\n          }\n        />\n      );\n    }\n\n    _setComponentRef(c) {\n      this._prevComponent = this._component;\n      this._component = c;\n    }\n\n    // A third party library can use getNode()\n    // to get the node reference of the decorated component\n    getNode() {\n      return this._component;\n    }\n  }\n\n  const propTypes = Component.propTypes;\n\n  AnimatedComponent.propTypes = {\n    style: function(props, propName, componentName) {\n      if (!propTypes) {\n        return;\n      }\n\n      for (const key in DeprecatedViewStylePropTypes) {\n        if (!propTypes[key] && props[key] !== undefined) {\n          console.warn(\n            'You are setting the style `{ ' +\n              key +\n              ': ... }` as a prop. You ' +\n              'should nest it in a style object. ' +\n              'E.g. `{ style: { ' +\n              key +\n              ': ... } }`',\n          );\n        }\n      }\n    },\n  };\n\n  return AnimatedComponent;\n}\n\nmodule.exports = createAnimatedComponent;\n"]}