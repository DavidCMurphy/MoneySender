331b17c00b1aea5be83692b135680ba8
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var DeprecatedImageStylePropTypes = require('DeprecatedImageStylePropTypes');

var TextStylePropTypes = require('TextStylePropTypes');

var DeprecatedViewStylePropTypes = require('DeprecatedViewStylePropTypes');

var invariant = require('fbjs/lib/invariant');

var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

var StyleSheetValidation = function () {
  function StyleSheetValidation() {
    (0, _classCallCheck2.default)(this, StyleSheetValidation);
  }

  (0, _createClass2.default)(StyleSheetValidation, null, [{
    key: "validateStyleProp",
    value: function validateStyleProp(prop, style, caller) {
      if (!__DEV__ || global.__RCTProfileIsProfiling) {
        return;
      }

      if (allStylePropTypes[prop] === undefined) {
        var message1 = '"' + prop + '" is not a valid style property.';
        var message2 = '\nValid style props: ' + JSON.stringify(Object.keys(allStylePropTypes).sort(), null, '  ');
        styleError(message1, style, caller, message2);
      }

      var error = allStylePropTypes[prop](style, prop, caller, 'prop', null, ReactPropTypesSecret);

      if (error) {
        styleError(error.message, style, caller);
      }
    }
  }, {
    key: "validateStyle",
    value: function validateStyle(name, styles) {
      if (!__DEV__ || global.__RCTProfileIsProfiling) {
        return;
      }

      for (var prop in styles[name]) {
        StyleSheetValidation.validateStyleProp(prop, styles[name], 'StyleSheet ' + name);
      }
    }
  }, {
    key: "addValidStylePropTypes",
    value: function addValidStylePropTypes(stylePropTypes) {
      if (!__DEV__ || global.__RCTProfileIsProfiling) {
        return;
      }

      for (var key in stylePropTypes) {
        allStylePropTypes[key] = stylePropTypes[key];
      }
    }
  }]);
  return StyleSheetValidation;
}();

var styleError = function styleError(message1, style, caller, message2) {
  invariant(false, message1 + '\n' + (caller || '<<unknown>>') + ': ' + JSON.stringify(style, null, '  ') + (message2 || ''));
};

var allStylePropTypes = {};

if (__DEV__ && !global.__RCTProfileIsProfiling) {
  StyleSheetValidation.addValidStylePropTypes(DeprecatedImageStylePropTypes);
  StyleSheetValidation.addValidStylePropTypes(TextStylePropTypes);
  StyleSheetValidation.addValidStylePropTypes(DeprecatedViewStylePropTypes);
}

module.exports = StyleSheetValidation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN0eWxlU2hlZXRWYWxpZGF0aW9uLmpzIl0sIm5hbWVzIjpbIkRlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzIiwicmVxdWlyZSIsIlRleHRTdHlsZVByb3BUeXBlcyIsIkRlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXMiLCJpbnZhcmlhbnQiLCJSZWFjdFByb3BUeXBlc1NlY3JldCIsIlN0eWxlU2hlZXRWYWxpZGF0aW9uIiwicHJvcCIsInN0eWxlIiwiY2FsbGVyIiwiX19ERVZfXyIsImdsb2JhbCIsIl9fUkNUUHJvZmlsZUlzUHJvZmlsaW5nIiwiYWxsU3R5bGVQcm9wVHlwZXMiLCJ1bmRlZmluZWQiLCJtZXNzYWdlMSIsIm1lc3NhZ2UyIiwiSlNPTiIsInN0cmluZ2lmeSIsIk9iamVjdCIsImtleXMiLCJzb3J0Iiwic3R5bGVFcnJvciIsImVycm9yIiwibWVzc2FnZSIsIm5hbWUiLCJzdHlsZXMiLCJ2YWxpZGF0ZVN0eWxlUHJvcCIsInN0eWxlUHJvcFR5cGVzIiwia2V5IiwiYWRkVmFsaWRTdHlsZVByb3BUeXBlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7OztBQUVBLElBQU1BLDZCQUE2QixHQUFHQyxPQUFPLENBQUMsK0JBQUQsQ0FBN0M7O0FBQ0EsSUFBTUMsa0JBQWtCLEdBQUdELE9BQU8sQ0FBQyxvQkFBRCxDQUFsQzs7QUFDQSxJQUFNRSw0QkFBNEIsR0FBR0YsT0FBTyxDQUFDLDhCQUFELENBQTVDOztBQUVBLElBQU1HLFNBQVMsR0FBR0gsT0FBTyxDQUFDLG9CQUFELENBQXpCOztBQU1BLElBQU1JLG9CQUFvQixHQUFHLDhDQUE3Qjs7SUFFTUMsb0I7Ozs7Ozs7c0NBQ3FCQyxJLEVBQWNDLEssRUFBZUMsTSxFQUFnQjtBQUNwRSxVQUFJLENBQUNDLE9BQUQsSUFBWUMsTUFBTSxDQUFDQyx1QkFBdkIsRUFBZ0Q7QUFDOUM7QUFDRDs7QUFDRCxVQUFJQyxpQkFBaUIsQ0FBQ04sSUFBRCxDQUFqQixLQUE0Qk8sU0FBaEMsRUFBMkM7QUFDekMsWUFBTUMsUUFBUSxHQUFHLE1BQU1SLElBQU4sR0FBYSxrQ0FBOUI7QUFDQSxZQUFNUyxRQUFRLEdBQ1osMEJBQ0FDLElBQUksQ0FBQ0MsU0FBTCxDQUFlQyxNQUFNLENBQUNDLElBQVAsQ0FBWVAsaUJBQVosRUFBK0JRLElBQS9CLEVBQWYsRUFBc0QsSUFBdEQsRUFBNEQsSUFBNUQsQ0FGRjtBQUdBQyxRQUFBQSxVQUFVLENBQUNQLFFBQUQsRUFBV1AsS0FBWCxFQUFrQkMsTUFBbEIsRUFBMEJPLFFBQTFCLENBQVY7QUFDRDs7QUFDRCxVQUFNTyxLQUFLLEdBQUdWLGlCQUFpQixDQUFDTixJQUFELENBQWpCLENBQ1pDLEtBRFksRUFFWkQsSUFGWSxFQUdaRSxNQUhZLEVBSVosTUFKWSxFQUtaLElBTFksRUFNWkosb0JBTlksQ0FBZDs7QUFRQSxVQUFJa0IsS0FBSixFQUFXO0FBQ1RELFFBQUFBLFVBQVUsQ0FBQ0MsS0FBSyxDQUFDQyxPQUFQLEVBQWdCaEIsS0FBaEIsRUFBdUJDLE1BQXZCLENBQVY7QUFDRDtBQUNGOzs7a0NBRW9CZ0IsSSxFQUFjQyxNLEVBQWdCO0FBQ2pELFVBQUksQ0FBQ2hCLE9BQUQsSUFBWUMsTUFBTSxDQUFDQyx1QkFBdkIsRUFBZ0Q7QUFDOUM7QUFDRDs7QUFDRCxXQUFLLElBQU1MLElBQVgsSUFBbUJtQixNQUFNLENBQUNELElBQUQsQ0FBekIsRUFBaUM7QUFDL0JuQixRQUFBQSxvQkFBb0IsQ0FBQ3FCLGlCQUFyQixDQUNFcEIsSUFERixFQUVFbUIsTUFBTSxDQUFDRCxJQUFELENBRlIsRUFHRSxnQkFBZ0JBLElBSGxCO0FBS0Q7QUFDRjs7OzJDQUs2QkcsYyxFQUFnQjtBQUM1QyxVQUFJLENBQUNsQixPQUFELElBQVlDLE1BQU0sQ0FBQ0MsdUJBQXZCLEVBQWdEO0FBQzlDO0FBQ0Q7O0FBQ0QsV0FBSyxJQUFNaUIsR0FBWCxJQUFrQkQsY0FBbEIsRUFBa0M7QUFDaENmLFFBQUFBLGlCQUFpQixDQUFDZ0IsR0FBRCxDQUFqQixHQUF5QkQsY0FBYyxDQUFDQyxHQUFELENBQXZDO0FBQ0Q7QUFDRjs7Ozs7QUFHSCxJQUFNUCxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFTUCxRQUFULEVBQW1CUCxLQUFuQixFQUEwQkMsTUFBMUIsRUFBbUNPLFFBQW5DLEVBQThDO0FBQy9EWixFQUFBQSxTQUFTLENBQ1AsS0FETyxFQUVQVyxRQUFRLEdBQ04sSUFERixJQUVHTixNQUFNLElBQUksYUFGYixJQUdFLElBSEYsR0FJRVEsSUFBSSxDQUFDQyxTQUFMLENBQWVWLEtBQWYsRUFBc0IsSUFBdEIsRUFBNEIsSUFBNUIsQ0FKRixJQUtHUSxRQUFRLElBQUksRUFMZixDQUZPLENBQVQ7QUFTRCxDQVZEOztBQVlBLElBQU1ILGlCQUFpQixHQUFHLEVBQTFCOztBQUVBLElBQUlILE9BQU8sSUFBSSxDQUFDQyxNQUFNLENBQUNDLHVCQUF2QixFQUFnRDtBQUM5Q04sRUFBQUEsb0JBQW9CLENBQUN3QixzQkFBckIsQ0FBNEM5Qiw2QkFBNUM7QUFDQU0sRUFBQUEsb0JBQW9CLENBQUN3QixzQkFBckIsQ0FBNEM1QixrQkFBNUM7QUFDQUksRUFBQUEsb0JBQW9CLENBQUN3QixzQkFBckIsQ0FBNEMzQiw0QkFBNUM7QUFDRDs7QUFFRDRCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjFCLG9CQUFqQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29weXJpZ2h0IChjKSBGYWNlYm9vaywgSW5jLiBhbmQgaXRzIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IERlcHJlY2F0ZWRJbWFnZVN0eWxlUHJvcFR5cGVzID0gcmVxdWlyZSgnRGVwcmVjYXRlZEltYWdlU3R5bGVQcm9wVHlwZXMnKTtcbmNvbnN0IFRleHRTdHlsZVByb3BUeXBlcyA9IHJlcXVpcmUoJ1RleHRTdHlsZVByb3BUeXBlcycpO1xuY29uc3QgRGVwcmVjYXRlZFZpZXdTdHlsZVByb3BUeXBlcyA9IHJlcXVpcmUoJ0RlcHJlY2F0ZWRWaWV3U3R5bGVQcm9wVHlwZXMnKTtcblxuY29uc3QgaW52YXJpYW50ID0gcmVxdWlyZSgnZmJqcy9saWIvaW52YXJpYW50Jyk7XG5cbi8vIEhhcmRjb2RlZCBiZWNhdXNlIHRoaXMgaXMgYSBsZWdpdCBjYXNlIGJ1dCB3ZSBkb24ndCB3YW50IHRvIGxvYWQgaXQgZnJvbVxuLy8gYSBwcml2YXRlIEFQSS4gV2UgbWlnaHQgbGlrZWx5IHdhbnQgdG8gdW5pZnkgc3R5bGUgc2hlZXQgY3JlYXRpb24gd2l0aCBob3cgaXRcbi8vIGlzIGRvbmUgaW4gdGhlIERPTSBzbyB0aGlzIG1pZ2h0IG1vdmUgaW50byBSZWFjdC4gSSBrbm93IHdoYXQgSSdtIGRvaW5nIHNvXG4vLyBwbHogZG9uJ3QgZmlyZSBtZS5cbmNvbnN0IFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxuY2xhc3MgU3R5bGVTaGVldFZhbGlkYXRpb24ge1xuICBzdGF0aWMgdmFsaWRhdGVTdHlsZVByb3AocHJvcDogc3RyaW5nLCBzdHlsZTogT2JqZWN0LCBjYWxsZXI6IHN0cmluZykge1xuICAgIGlmICghX19ERVZfXyB8fCBnbG9iYWwuX19SQ1RQcm9maWxlSXNQcm9maWxpbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgaWYgKGFsbFN0eWxlUHJvcFR5cGVzW3Byb3BdID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGNvbnN0IG1lc3NhZ2UxID0gJ1wiJyArIHByb3AgKyAnXCIgaXMgbm90IGEgdmFsaWQgc3R5bGUgcHJvcGVydHkuJztcbiAgICAgIGNvbnN0IG1lc3NhZ2UyID1cbiAgICAgICAgJ1xcblZhbGlkIHN0eWxlIHByb3BzOiAnICtcbiAgICAgICAgSlNPTi5zdHJpbmdpZnkoT2JqZWN0LmtleXMoYWxsU3R5bGVQcm9wVHlwZXMpLnNvcnQoKSwgbnVsbCwgJyAgJyk7XG4gICAgICBzdHlsZUVycm9yKG1lc3NhZ2UxLCBzdHlsZSwgY2FsbGVyLCBtZXNzYWdlMik7XG4gICAgfVxuICAgIGNvbnN0IGVycm9yID0gYWxsU3R5bGVQcm9wVHlwZXNbcHJvcF0oXG4gICAgICBzdHlsZSxcbiAgICAgIHByb3AsXG4gICAgICBjYWxsZXIsXG4gICAgICAncHJvcCcsXG4gICAgICBudWxsLFxuICAgICAgUmVhY3RQcm9wVHlwZXNTZWNyZXQsXG4gICAgKTtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgIHN0eWxlRXJyb3IoZXJyb3IubWVzc2FnZSwgc3R5bGUsIGNhbGxlcik7XG4gICAgfVxuICB9XG5cbiAgc3RhdGljIHZhbGlkYXRlU3R5bGUobmFtZTogc3RyaW5nLCBzdHlsZXM6IE9iamVjdCkge1xuICAgIGlmICghX19ERVZfXyB8fCBnbG9iYWwuX19SQ1RQcm9maWxlSXNQcm9maWxpbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBwcm9wIGluIHN0eWxlc1tuYW1lXSkge1xuICAgICAgU3R5bGVTaGVldFZhbGlkYXRpb24udmFsaWRhdGVTdHlsZVByb3AoXG4gICAgICAgIHByb3AsXG4gICAgICAgIHN0eWxlc1tuYW1lXSxcbiAgICAgICAgJ1N0eWxlU2hlZXQgJyArIG5hbWUsXG4gICAgICApO1xuICAgIH1cbiAgfVxuXG4gIC8qICRGbG93Rml4TWUoPj0wLjg1LjAgc2l0ZT1yZWFjdF9uYXRpdmVfZmIpIFRoaXMgY29tbWVudCBzdXBwcmVzc2VzIGFuIGVycm9yXG4gICAqIGZvdW5kIHdoZW4gRmxvdyB2MC44NSB3YXMgZGVwbG95ZWQuIFRvIHNlZSB0aGUgZXJyb3IsIGRlbGV0ZSB0aGlzIGNvbW1lbnRcbiAgICogYW5kIHJ1biBGbG93LiAqL1xuICBzdGF0aWMgYWRkVmFsaWRTdHlsZVByb3BUeXBlcyhzdHlsZVByb3BUeXBlcykge1xuICAgIGlmICghX19ERVZfXyB8fCBnbG9iYWwuX19SQ1RQcm9maWxlSXNQcm9maWxpbmcpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgZm9yIChjb25zdCBrZXkgaW4gc3R5bGVQcm9wVHlwZXMpIHtcbiAgICAgIGFsbFN0eWxlUHJvcFR5cGVzW2tleV0gPSBzdHlsZVByb3BUeXBlc1trZXldO1xuICAgIH1cbiAgfVxufVxuXG5jb25zdCBzdHlsZUVycm9yID0gZnVuY3Rpb24obWVzc2FnZTEsIHN0eWxlLCBjYWxsZXI/LCBtZXNzYWdlMj8pIHtcbiAgaW52YXJpYW50KFxuICAgIGZhbHNlLFxuICAgIG1lc3NhZ2UxICtcbiAgICAgICdcXG4nICtcbiAgICAgIChjYWxsZXIgfHwgJzw8dW5rbm93bj4+JykgK1xuICAgICAgJzogJyArXG4gICAgICBKU09OLnN0cmluZ2lmeShzdHlsZSwgbnVsbCwgJyAgJykgK1xuICAgICAgKG1lc3NhZ2UyIHx8ICcnKSxcbiAgKTtcbn07XG5cbmNvbnN0IGFsbFN0eWxlUHJvcFR5cGVzID0ge307XG5cbmlmIChfX0RFVl9fICYmICFnbG9iYWwuX19SQ1RQcm9maWxlSXNQcm9maWxpbmcpIHtcbiAgU3R5bGVTaGVldFZhbGlkYXRpb24uYWRkVmFsaWRTdHlsZVByb3BUeXBlcyhEZXByZWNhdGVkSW1hZ2VTdHlsZVByb3BUeXBlcyk7XG4gIFN0eWxlU2hlZXRWYWxpZGF0aW9uLmFkZFZhbGlkU3R5bGVQcm9wVHlwZXMoVGV4dFN0eWxlUHJvcFR5cGVzKTtcbiAgU3R5bGVTaGVldFZhbGlkYXRpb24uYWRkVmFsaWRTdHlsZVByb3BUeXBlcyhEZXByZWNhdGVkVmlld1N0eWxlUHJvcFR5cGVzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBTdHlsZVNoZWV0VmFsaWRhdGlvbjtcbiJdfQ==