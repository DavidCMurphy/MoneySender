{"version":3,"sources":["StateObservable.js"],"names":["Object","defineProperty","exports","value","StateObservable","undefined","_rxjs","require","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_Observable","stateSubject","initialState","_this","getPrototypeOf","subscriber","subscription","__notifier","subscribe","closed","next","Subject","__subscription","Observable"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,eAAR,GAA0BC,SAA1B;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,SAASC,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAAE,MAAI,CAACD,IAAL,EAAW;AAAE,UAAM,IAAIE,cAAJ,CAAmB,2DAAnB,CAAN;AAAwF;;AAAC,SAAOD,IAAI,KAAK,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,UAAjD,CAAJ,GAAmEA,IAAnE,GAA0ED,IAAjF;AAAwF;;AAEhP,SAASG,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AAAE,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAAE,UAAM,IAAIP,SAAJ,CAAc,6DAA6D,OAAOO,UAAlF,CAAN;AAAsG;;AAACD,EAAAA,QAAQ,CAACE,SAAT,GAAqBnB,MAAM,CAACoB,MAAP,CAAcF,UAAU,IAAIA,UAAU,CAACC,SAAvC,EAAkD;AAAEE,IAAAA,WAAW,EAAE;AAAElB,MAAAA,KAAK,EAAEc,QAAT;AAAmBK,MAAAA,UAAU,EAAE,KAA/B;AAAsCC,MAAAA,QAAQ,EAAE,IAAhD;AAAsDC,MAAAA,YAAY,EAAE;AAApE;AAAf,GAAlD,CAArB;AAAqK,MAAIN,UAAJ,EAAgBlB,MAAM,CAACyB,cAAP,GAAwBzB,MAAM,CAACyB,cAAP,CAAsBR,QAAtB,EAAgCC,UAAhC,CAAxB,GAAsED,QAAQ,CAACS,SAAT,GAAqBR,UAA3F;AAAwG;;AAE9e,IAAId,eAAe,GAAGF,OAAO,CAACE,eAAR,GAA0B,UAAUuB,WAAV,EAAuB;AACrEX,EAAAA,SAAS,CAACZ,eAAD,EAAkBuB,WAAlB,CAAT;;AAEA,WAASvB,eAAT,CAAyBwB,YAAzB,EAAuCC,YAAvC,EAAqD;AACnDrB,IAAAA,eAAe,CAAC,IAAD,EAAOJ,eAAP,CAAf;;AAEA,QAAI0B,KAAK,GAAGlB,0BAA0B,CAAC,IAAD,EAAO,CAACR,eAAe,CAACsB,SAAhB,IAA6B1B,MAAM,CAAC+B,cAAP,CAAsB3B,eAAtB,CAA9B,EAAsEU,IAAtE,CAA2E,IAA3E,EAAiF,UAAUkB,UAAV,EAAsB;AAClJ,UAAIC,YAAY,GAAGH,KAAK,CAACI,UAAN,CAAiBC,SAAjB,CAA2BH,UAA3B,CAAnB;;AACA,UAAIC,YAAY,IAAI,CAACA,YAAY,CAACG,MAAlC,EAA0C;AACxCJ,QAAAA,UAAU,CAACK,IAAX,CAAgBP,KAAK,CAAC3B,KAAtB;AACD;;AACD,aAAO8B,YAAP;AACD,KAN4C,CAAP,CAAtC;;AAQAH,IAAAA,KAAK,CAAC3B,KAAN,GAAc0B,YAAd;AACAC,IAAAA,KAAK,CAACI,UAAN,GAAmB,IAAI5B,KAAK,CAACgC,OAAV,EAAnB;AACAR,IAAAA,KAAK,CAACS,cAAN,GAAuBX,YAAY,CAACO,SAAb,CAAuB,UAAUhC,KAAV,EAAiB;AAK7D,UAAIA,KAAK,KAAK2B,KAAK,CAAC3B,KAApB,EAA2B;AACzB2B,QAAAA,KAAK,CAAC3B,KAAN,GAAcA,KAAd;;AACA2B,QAAAA,KAAK,CAACI,UAAN,CAAiBG,IAAjB,CAAsBlC,KAAtB;AACD;AACF,KATsB,CAAvB;AAUA,WAAO2B,KAAP;AACD;;AAED,SAAO1B,eAAP;AACD,CA9B+C,CA8B9CE,KAAK,CAACkC,UA9BwC,CAAhD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StateObservable = undefined;\n\nvar _rxjs = require('rxjs');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar StateObservable = exports.StateObservable = function (_Observable) {\n  _inherits(StateObservable, _Observable);\n\n  function StateObservable(stateSubject, initialState) {\n    _classCallCheck(this, StateObservable);\n\n    var _this = _possibleConstructorReturn(this, (StateObservable.__proto__ || Object.getPrototypeOf(StateObservable)).call(this, function (subscriber) {\n      var subscription = _this.__notifier.subscribe(subscriber);\n      if (subscription && !subscription.closed) {\n        subscriber.next(_this.value);\n      }\n      return subscription;\n    }));\n\n    _this.value = initialState;\n    _this.__notifier = new _rxjs.Subject();\n    _this.__subscription = stateSubject.subscribe(function (value) {\n      // We only want to update state$ if it has actually changed since\n      // redux requires reducers use immutability patterns.\n      // This is basically what distinctUntilChanged() does but it's so simple\n      // we don't need to pull that code in\n      if (value !== _this.value) {\n        _this.value = value;\n        _this.__notifier.next(value);\n      }\n    });\n    return _this;\n  }\n\n  return StateObservable;\n}(_rxjs.Observable);"]}