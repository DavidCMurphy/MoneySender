{"file":"/Users/davidmurphy/Desktop/MoneySender/src/__tests__/FormEpicTests.tsx","mappings":";;;;;;;;;;;;;AAEQ,0DAAoC;AAEpC,uDAAoD;AACpD,gDAAyC;AACzC,+BAAyB;AAGzB,QAAQ,CAAC,2CAA2C,EAAE,GAAG,EAAE;IAEvD,iBAAiB;IACjB,MAAM,KAAK,GAAG;QACV,KAAK,EAAE;YACH,OAAO,EAAE;gBACL,cAAc,EAAE,IAAI;gBACpB,SAAS,EAAE,CAAC;aACf;SACJ;KACJ,CAAA;IAED,EAAE,CAAC,EAAE,EAAE,GAAS,EAAE;QACd,MAAM,WAAW,GAAgB;YACzB,IAAI,EAAE,EAAE;YACR,KAAK,EAAE,EAAE;YACT,MAAM,EAAE,GAAG;SAClB,CAAA;QAED,MAAM,MAAM,GAAoB;YAC5B,IAAI,EAAE,sBAAQ,CAAC,UAAU;YACzB,WAAW;SACd,CAAA;QAED,MAAM,gBAAgB,GAAG,IAAI,oCAAiB,CAAY,SAAE,CAAE,MAAM,CAAE,CAAC,CAAA;QACvE,MAAM,MAAM,GAAG,eAAQ,CAAC,gBAAgB,EAAE,KAAY,CAAE,CAAA;QACxD,MAAM,OAAO,GAAG,MAAM,MAAM,CAAC,SAAS,EAAE,CAAA;QAExC,MAAM,CAAE,OAAO,CAAE,CAAC,OAAO,CAAC,EAAE,IAAI,EAAE,sBAAQ,CAAC,kBAAkB,EAAE,WAAW,EAAE,CAAC,CAAA;IACjF,CAAC,CAAA,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","names":[],"sources":["/Users/davidmurphy/Desktop/MoneySender/src/__tests__/FormEpicTests.tsx"],"sourcesContent":["\n\n        import SendEpic from '../Send/Epics'\n        import { SendMoneyAction, Transaction } from '../Send/Reducers'\n        import { ActionsObservable } from 'redux-observable'\n        import { TypeKeys } from '../ActionTypes'\n        import { of } from 'rxjs'\nimport { AnyAction } from 'redux';\n\n        describe('Form validation shoudl function correctly', () => {\n\n            // mock the store\n            const store = {\n                value: {\n                    account: {\n                        totalAvailable: 1000,\n                        totalSent: 0\n                    }\n                }\n            }\n\n            it(``, async () => {\n                const transaction: Transaction = {\n                        name: '',\n                        email: '',\n                        amount: '0'\n                }\n\n                const action: SendMoneyAction = {\n                    type: TypeKeys.SEND_MONEY,\n                    transaction\n                }\n\n                const actionObservable = new ActionsObservable<AnyAction>(of( action ))\n                const result = SendEpic(actionObservable, store as any )\n                const actions = await result.toPromise()\n\n                expect( actions ).toEqual({ type: TypeKeys.SEND_MONEY_SUCCESS, transaction })\n            })\n          })"],"version":3}