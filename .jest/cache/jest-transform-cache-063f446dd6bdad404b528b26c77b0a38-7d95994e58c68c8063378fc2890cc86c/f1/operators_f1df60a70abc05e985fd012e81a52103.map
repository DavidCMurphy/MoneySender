{"version":3,"sources":["operators.js"],"names":["Object","defineProperty","exports","value","ofType","undefined","_operators","require","keyHasType","type","key","toString","_len","arguments","length","keys","Array","_key","source","pipe","filter","_ref","len","i"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,MAAR,GAAiBC,SAAjB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIC,UAAU,GAAG,SAASA,UAAT,CAAoBC,IAApB,EAA0BC,GAA1B,EAA+B;AAC9C,SAAOD,IAAI,KAAKC,GAAT,IAAgB,OAAOA,GAAP,KAAe,UAAf,IAA6BD,IAAI,KAAKC,GAAG,CAACC,QAAJ,EAA7D;AACD,CAFD;;AAIA,IAAIP,MAAM,GAAGF,OAAO,CAACE,MAAR,GAAiB,SAASA,MAAT,GAAkB;AAC9C,OAAK,IAAIQ,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAGC,KAAK,CAACJ,IAAD,CAAzC,EAAiDK,IAAI,GAAG,CAA7D,EAAgEA,IAAI,GAAGL,IAAvE,EAA6EK,IAAI,EAAjF,EAAqF;AACnFF,IAAAA,IAAI,CAACE,IAAD,CAAJ,GAAaJ,SAAS,CAACI,IAAD,CAAtB;AACD;;AAED,SAAO,UAAUC,MAAV,EAAkB;AACvB,WAAOA,MAAM,CAACC,IAAP,CAAY,CAAC,GAAGb,UAAU,CAACc,MAAf,EAAuB,UAAUC,IAAV,EAAgB;AACxD,UAAIZ,IAAI,GAAGY,IAAI,CAACZ,IAAhB;AAEA,UAAIa,GAAG,GAAGP,IAAI,CAACD,MAAf;;AACA,UAAIQ,GAAG,KAAK,CAAZ,EAAe;AACb,eAAOd,UAAU,CAACC,IAAD,EAAOM,IAAI,CAAC,CAAD,CAAX,CAAjB;AACD,OAFD,MAEO;AACL,aAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAApB,EAAyBC,CAAC,EAA1B,EAA8B;AAC5B,cAAIf,UAAU,CAACC,IAAD,EAAOM,IAAI,CAACQ,CAAD,CAAX,CAAd,EAA+B;AAC7B,mBAAO,IAAP;AACD;AACF;AACF;;AACD,aAAO,KAAP;AACD,KAdkB,CAAZ,CAAP;AAeD,GAhBD;AAiBD,CAtBD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ofType = undefined;\n\nvar _operators = require('rxjs/operators');\n\nvar keyHasType = function keyHasType(type, key) {\n  return type === key || typeof key === 'function' && type === key.toString();\n};\n\nvar ofType = exports.ofType = function ofType() {\n  for (var _len = arguments.length, keys = Array(_len), _key = 0; _key < _len; _key++) {\n    keys[_key] = arguments[_key];\n  }\n\n  return function (source) {\n    return source.pipe((0, _operators.filter)(function (_ref) {\n      var type = _ref.type;\n\n      var len = keys.length;\n      if (len === 1) {\n        return keyHasType(type, keys[0]);\n      } else {\n        for (var i = 0; i < len; i++) {\n          if (keyHasType(type, keys[i])) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }));\n  };\n};"]}