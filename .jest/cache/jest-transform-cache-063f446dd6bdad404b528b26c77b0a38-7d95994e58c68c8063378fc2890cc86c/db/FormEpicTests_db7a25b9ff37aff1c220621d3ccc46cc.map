{"file":"/Users/davidmurphy/Desktop/MoneySender/src/__tests__/FormEpicTests.tsx","mappings":";;;;;;;;;;;;;AAEQ,0DAAoC;AAEpC,uDAAoD;AACpD,gDAAyC;AACzC,+BAAyB;AAGzB,QAAQ,CAAC,2CAA2C,EAAE,GAAG,EAAE;IAEvD,MAAM,kBAAkB,GAAG,GAAG,EAAE,CAAC,CAAC;QAC9B,QAAQ,EAAE,IAAI,CAAC,EAAE,EAAE;KACtB,CAAC,CAAA;IAEF,EAAE,CAAC,EAAE,EAAE,GAAS,EAAE;QACd,QAAQ;QACR,MAAM,KAAK,GAAG,kBAAkB,EAAE,CAAA;QAClC,KAAK,CAAC,QAAQ,CAAC,eAAe,CAAC;YAC3B,OAAO,EAAE;gBACL,cAAc,EAAE,IAAI;gBACpB,SAAS,EAAE,CAAC;aACf;SACJ,CAAC,CAAA;QAEF,MAAM,MAAM,GAAoB;YAC5B,IAAI,EAAE,sBAAQ,CAAC,UAAU;YACzB,WAAW,EAAE;gBACT,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE,EAAE;gBACT,MAAM,EAAE,GAAG;aACd;SACJ,CAAA;QAED,MAAM,gBAAgB,GAAG,IAAI,oCAAiB,CAAY,SAAE,CAAE,MAAM,CAAE,CAAC,CAAA;QAEvE,OAAO;QACP,MAAM,MAAM,GAAG,eAAQ,CAAC,gBAAgB,EAAE,KAAY,CAAE,CAAA;QAExD,OAAO;QACP,MAAM,OAAO,GAAG,MAAM,MAAM,CAAA;QAE5B,OAAO,CAAC,GAAG,CAAE,OAAO,CAAC,CAAC,CAAC,CAAE,CAAA;IAC7B,CAAC,CAAA,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","names":[],"sources":["/Users/davidmurphy/Desktop/MoneySender/src/__tests__/FormEpicTests.tsx"],"sourcesContent":["\n\n        import SendEpic from '../Send/Epics'\n        import { SendMoneyAction } from '../Send/Reducers'\n        import { ActionsObservable } from 'redux-observable'\n        import { TypeKeys } from '../ActionTypes'\n        import { of } from 'rxjs'\nimport { AnyAction } from 'redux';\n\n        describe('Form validation shoudl function correctly', () => {\n\n            const createStoreFixture = () => ({\n                getState: jest.fn()\n            })\n\n            it(``, async () => {\n                // Given\n                const store = createStoreFixture()\n                store.getState.mockReturnValue({\n                    account: {\n                        totalAvailable: 1000,\n                        totalSent: 0\n                    }\n                })\n\n                const action: SendMoneyAction = {\n                    type: TypeKeys.SEND_MONEY,\n                    transaction: {\n                        name: '',\n                        email: '',\n                        amount: '0'\n                    }\n                }\n\n                const actionObservable = new ActionsObservable<AnyAction>(of( action ))\n\n                // When\n                const result = SendEpic(actionObservable, store as any )\n\n                // Then\n                const actions = await result\n\n                console.log( actions[0] )\n            })\n          })"],"version":3}