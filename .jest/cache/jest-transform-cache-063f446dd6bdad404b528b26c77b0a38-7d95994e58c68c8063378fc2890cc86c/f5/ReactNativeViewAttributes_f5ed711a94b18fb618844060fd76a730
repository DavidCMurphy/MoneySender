780c660fa656fff7e4733fa1bdaaaf2b
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var ReactNativeStyleAttributes = require('ReactNativeStyleAttributes');

var ReactNativeViewAttributes = {};
ReactNativeViewAttributes.UIView = {
  pointerEvents: true,
  accessible: true,
  accessibilityActions: true,
  accessibilityLabel: true,
  accessibilityComponentType: true,
  accessibilityLiveRegion: true,
  accessibilityRole: true,
  accessibilityStates: true,
  accessibilityTraits: true,
  accessibilityHint: true,
  importantForAccessibility: true,
  nativeID: true,
  testID: true,
  renderToHardwareTextureAndroid: true,
  shouldRasterizeIOS: true,
  onLayout: true,
  onAccessibilityAction: true,
  onAccessibilityTap: true,
  onMagicTap: true,
  collapsable: true,
  needsOffscreenAlphaCompositing: true,
  style: ReactNativeStyleAttributes
};
ReactNativeViewAttributes.RCTView = (0, _objectSpread2.default)({}, ReactNativeViewAttributes.UIView, {
  removeClippedSubviews: true
});
module.exports = ReactNativeViewAttributes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuanMiXSwibmFtZXMiOlsiUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMiLCJyZXF1aXJlIiwiUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcyIsIlVJVmlldyIsInBvaW50ZXJFdmVudHMiLCJhY2Nlc3NpYmxlIiwiYWNjZXNzaWJpbGl0eUFjdGlvbnMiLCJhY2Nlc3NpYmlsaXR5TGFiZWwiLCJhY2Nlc3NpYmlsaXR5Q29tcG9uZW50VHlwZSIsImFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uIiwiYWNjZXNzaWJpbGl0eVJvbGUiLCJhY2Nlc3NpYmlsaXR5U3RhdGVzIiwiYWNjZXNzaWJpbGl0eVRyYWl0cyIsImFjY2Vzc2liaWxpdHlIaW50IiwiaW1wb3J0YW50Rm9yQWNjZXNzaWJpbGl0eSIsIm5hdGl2ZUlEIiwidGVzdElEIiwicmVuZGVyVG9IYXJkd2FyZVRleHR1cmVBbmRyb2lkIiwic2hvdWxkUmFzdGVyaXplSU9TIiwib25MYXlvdXQiLCJvbkFjY2Vzc2liaWxpdHlBY3Rpb24iLCJvbkFjY2Vzc2liaWxpdHlUYXAiLCJvbk1hZ2ljVGFwIiwiY29sbGFwc2FibGUiLCJuZWVkc09mZnNjcmVlbkFscGhhQ29tcG9zaXRpbmciLCJzdHlsZSIsIlJDVFZpZXciLCJyZW1vdmVDbGlwcGVkU3Vidmlld3MiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFVQTs7Ozs7O0FBRUEsSUFBTUEsMEJBQTBCLEdBQUdDLE9BQU8sQ0FBQyw0QkFBRCxDQUExQzs7QUFFQSxJQUFNQyx5QkFBeUIsR0FBRyxFQUFsQztBQUVBQSx5QkFBeUIsQ0FBQ0MsTUFBMUIsR0FBbUM7QUFDakNDLEVBQUFBLGFBQWEsRUFBRSxJQURrQjtBQUVqQ0MsRUFBQUEsVUFBVSxFQUFFLElBRnFCO0FBR2pDQyxFQUFBQSxvQkFBb0IsRUFBRSxJQUhXO0FBSWpDQyxFQUFBQSxrQkFBa0IsRUFBRSxJQUphO0FBS2pDQyxFQUFBQSwwQkFBMEIsRUFBRSxJQUxLO0FBTWpDQyxFQUFBQSx1QkFBdUIsRUFBRSxJQU5RO0FBT2pDQyxFQUFBQSxpQkFBaUIsRUFBRSxJQVBjO0FBUWpDQyxFQUFBQSxtQkFBbUIsRUFBRSxJQVJZO0FBU2pDQyxFQUFBQSxtQkFBbUIsRUFBRSxJQVRZO0FBVWpDQyxFQUFBQSxpQkFBaUIsRUFBRSxJQVZjO0FBV2pDQyxFQUFBQSx5QkFBeUIsRUFBRSxJQVhNO0FBWWpDQyxFQUFBQSxRQUFRLEVBQUUsSUFadUI7QUFhakNDLEVBQUFBLE1BQU0sRUFBRSxJQWJ5QjtBQWNqQ0MsRUFBQUEsOEJBQThCLEVBQUUsSUFkQztBQWVqQ0MsRUFBQUEsa0JBQWtCLEVBQUUsSUFmYTtBQWdCakNDLEVBQUFBLFFBQVEsRUFBRSxJQWhCdUI7QUFpQmpDQyxFQUFBQSxxQkFBcUIsRUFBRSxJQWpCVTtBQWtCakNDLEVBQUFBLGtCQUFrQixFQUFFLElBbEJhO0FBbUJqQ0MsRUFBQUEsVUFBVSxFQUFFLElBbkJxQjtBQW9CakNDLEVBQUFBLFdBQVcsRUFBRSxJQXBCb0I7QUFxQmpDQyxFQUFBQSw4QkFBOEIsRUFBRSxJQXJCQztBQXNCakNDLEVBQUFBLEtBQUssRUFBRXpCO0FBdEIwQixDQUFuQztBQXlCQUUseUJBQXlCLENBQUN3QixPQUExQixtQ0FDS3hCLHlCQUF5QixDQUFDQyxNQUQvQjtBQVFFd0IsRUFBQUEscUJBQXFCLEVBQUU7QUFSekI7QUFXQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IseUJBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvdyBzdHJpY3QtbG9jYWxcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IFJlYWN0TmF0aXZlU3R5bGVBdHRyaWJ1dGVzID0gcmVxdWlyZSgnUmVhY3ROYXRpdmVTdHlsZUF0dHJpYnV0ZXMnKTtcblxuY29uc3QgUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcyA9IHt9O1xuXG5SZWFjdE5hdGl2ZVZpZXdBdHRyaWJ1dGVzLlVJVmlldyA9IHtcbiAgcG9pbnRlckV2ZW50czogdHJ1ZSxcbiAgYWNjZXNzaWJsZTogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUFjdGlvbnM6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlMYWJlbDogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUNvbXBvbmVudFR5cGU6IHRydWUsXG4gIGFjY2Vzc2liaWxpdHlMaXZlUmVnaW9uOiB0cnVlLFxuICBhY2Nlc3NpYmlsaXR5Um9sZTogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eVN0YXRlczogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eVRyYWl0czogdHJ1ZSxcbiAgYWNjZXNzaWJpbGl0eUhpbnQ6IHRydWUsXG4gIGltcG9ydGFudEZvckFjY2Vzc2liaWxpdHk6IHRydWUsXG4gIG5hdGl2ZUlEOiB0cnVlLFxuICB0ZXN0SUQ6IHRydWUsXG4gIHJlbmRlclRvSGFyZHdhcmVUZXh0dXJlQW5kcm9pZDogdHJ1ZSxcbiAgc2hvdWxkUmFzdGVyaXplSU9TOiB0cnVlLFxuICBvbkxheW91dDogdHJ1ZSxcbiAgb25BY2Nlc3NpYmlsaXR5QWN0aW9uOiB0cnVlLFxuICBvbkFjY2Vzc2liaWxpdHlUYXA6IHRydWUsXG4gIG9uTWFnaWNUYXA6IHRydWUsXG4gIGNvbGxhcHNhYmxlOiB0cnVlLFxuICBuZWVkc09mZnNjcmVlbkFscGhhQ29tcG9zaXRpbmc6IHRydWUsXG4gIHN0eWxlOiBSZWFjdE5hdGl2ZVN0eWxlQXR0cmlidXRlcyxcbn07XG5cblJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXMuUkNUVmlldyA9IHtcbiAgLi4uUmVhY3ROYXRpdmVWaWV3QXR0cmlidXRlcy5VSVZpZXcsXG5cbiAgLy8gVGhpcyBpcyBhIHNwZWNpYWwgcGVyZm9ybWFuY2UgcHJvcGVydHkgZXhwb3NlZCBieSBSQ1RWaWV3IGFuZCB1c2VmdWwgZm9yXG4gIC8vIHNjcm9sbGluZyBjb250ZW50IHdoZW4gdGhlcmUgYXJlIG1hbnkgc3Vidmlld3MsIG1vc3Qgb2Ygd2hpY2ggYXJlIG9mZnNjcmVlbi5cbiAgLy8gRm9yIHRoaXMgcHJvcGVydHkgdG8gYmUgZWZmZWN0aXZlLCBpdCBtdXN0IGJlIGFwcGxpZWQgdG8gYSB2aWV3IHRoYXQgY29udGFpbnNcbiAgLy8gbWFueSBzdWJ2aWV3cyB0aGF0IGV4dGVuZCBvdXRzaWRlIGl0cyBib3VuZC4gVGhlIHN1YnZpZXdzIG11c3QgYWxzbyBoYXZlXG4gIC8vIG92ZXJmbG93OiBoaWRkZW4sIGFzIHNob3VsZCB0aGUgY29udGFpbmluZyB2aWV3IChvciBvbmUgb2YgaXRzIHN1cGVydmlld3MpLlxuICByZW1vdmVDbGlwcGVkU3Vidmlld3M6IHRydWUsXG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFJlYWN0TmF0aXZlVmlld0F0dHJpYnV0ZXM7XG4iXX0=