4400a0fb67745f1222cbfea1b6119205
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var AsyncAction_1 = require("./AsyncAction");

var AsyncScheduler_1 = require("./AsyncScheduler");

var VirtualTimeScheduler = function (_super) {
  __extends(VirtualTimeScheduler, _super);

  function VirtualTimeScheduler(SchedulerAction, maxFrames) {
    if (SchedulerAction === void 0) {
      SchedulerAction = VirtualAction;
    }

    if (maxFrames === void 0) {
      maxFrames = Number.POSITIVE_INFINITY;
    }

    var _this = _super.call(this, SchedulerAction, function () {
      return _this.frame;
    }) || this;

    _this.maxFrames = maxFrames;
    _this.frame = 0;
    _this.index = -1;
    return _this;
  }

  VirtualTimeScheduler.prototype.flush = function () {
    var _a = this,
        actions = _a.actions,
        maxFrames = _a.maxFrames;

    var error, action;

    while ((action = actions[0]) && action.delay <= maxFrames) {
      actions.shift();
      this.frame = action.delay;

      if (error = action.execute(action.state, action.delay)) {
        break;
      }
    }

    if (error) {
      while (action = actions.shift()) {
        action.unsubscribe();
      }

      throw error;
    }
  };

  VirtualTimeScheduler.frameTimeFactor = 10;
  return VirtualTimeScheduler;
}(AsyncScheduler_1.AsyncScheduler);

exports.VirtualTimeScheduler = VirtualTimeScheduler;

var VirtualAction = function (_super) {
  __extends(VirtualAction, _super);

  function VirtualAction(scheduler, work, index) {
    if (index === void 0) {
      index = scheduler.index += 1;
    }

    var _this = _super.call(this, scheduler, work) || this;

    _this.scheduler = scheduler;
    _this.work = work;
    _this.index = index;
    _this.active = true;
    _this.index = scheduler.index = index;
    return _this;
  }

  VirtualAction.prototype.schedule = function (state, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    if (!this.id) {
      return _super.prototype.schedule.call(this, state, delay);
    }

    this.active = false;
    var action = new VirtualAction(this.scheduler, this.work);
    this.add(action);
    return action.schedule(state, delay);
  };

  VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    this.delay = scheduler.frame + delay;
    var actions = scheduler.actions;
    actions.push(this);
    actions.sort(VirtualAction.sortActions);
    return true;
  };

  VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
    if (delay === void 0) {
      delay = 0;
    }

    return undefined;
  };

  VirtualAction.prototype._execute = function (state, delay) {
    if (this.active === true) {
      return _super.prototype._execute.call(this, state, delay);
    }
  };

  VirtualAction.sortActions = function (a, b) {
    if (a.delay === b.delay) {
      if (a.index === b.index) {
        return 0;
      } else if (a.index > b.index) {
        return 1;
      } else {
        return -1;
      }
    } else if (a.delay > b.delay) {
      return 1;
    } else {
      return -1;
    }
  };

  return VirtualAction;
}(AsyncAction_1.AsyncAction);

exports.VirtualAction = VirtualAction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9zY2hlZHVsZXIvVmlydHVhbFRpbWVTY2hlZHVsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxJQUFBLGFBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBOztBQUVBLElBQUEsZ0JBQUEsR0FBQSxPQUFBLENBQUEsa0JBQUEsQ0FBQTs7QUFHQSxJQUFBLG9CQUFBLEdBQUEsVUFBQSxNQUFBLEVBQUE7QUFBMEMsRUFBQSxTQUFBLENBQUEsb0JBQUEsRUFBQSxNQUFBLENBQUE7O0FBT3hDLFdBQUEsb0JBQUEsQ0FBWSxlQUFaLEVBQ21CLFNBRG5CLEVBQytEO0FBRG5ELFFBQUEsZUFBQSxLQUFBLEtBQUEsQ0FBQSxFQUFBO0FBQUEsTUFBQSxlQUFBLEdBQXNDLGFBQXRDO0FBQTBEOztBQUNuRCxRQUFBLFNBQUEsS0FBQSxLQUFBLENBQUEsRUFBQTtBQUFBLE1BQUEsU0FBQSxHQUFvQixNQUFNLENBQUMsaUJBQTNCO0FBQTRDOztBQUQvRCxRQUFBLEtBQUEsR0FFRSxNQUFBLENBQUEsSUFBQSxDQUFBLElBQUEsRUFBTSxlQUFOLEVBQXVCLFlBQUE7QUFBTSxhQUFBLEtBQUksQ0FBSixLQUFBO0FBQVUsS0FBdkMsS0FBd0MsSUFGMUM7O0FBQ21CLElBQUEsS0FBQSxDQUFBLFNBQUEsR0FBQSxTQUFBO0FBSlosSUFBQSxLQUFBLENBQUEsS0FBQSxHQUFnQixDQUFoQjtBQUNBLElBQUEsS0FBQSxDQUFBLEtBQUEsR0FBZ0IsQ0FBQyxDQUFqQjs7QUFLTjs7QUFPTSxFQUFBLG9CQUFBLENBQUEsU0FBQSxDQUFBLEtBQUEsR0FBUCxZQUFBO0FBRVEsUUFBQSxFQUFBLEdBQUEsSUFBQTtBQUFBLFFBQUMsT0FBQSxHQUFBLEVBQUEsQ0FBQSxPQUFEO0FBQUEsUUFBVSxTQUFBLEdBQUEsRUFBQSxDQUFBLFNBQVY7O0FBQ04sUUFBSSxLQUFKLEVBQWdCLE1BQWhC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